apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: greeter-app-deploy
spec:
  description: >-
    The Pipeline to build and deploy the Hello World Java App
    https://github.com/redhat-scholars/tekton-tutorial-greeter as Knative
    Service.
  params:
    - description: >-
        The fully qualified image name. If you are running on Minikube please
        use example.com/tekton-tutorial/greeter On OpenShift, use
        image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/tekton-tutorial-greeter
      name: image-name
      type: string
      default: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/tekton-tutorial-greeter
    - default: quarkus
      description: >-
        The application framework to use, value can be either quarkus or
        springboot
      name: context-dir
      type: string
    - default: 'https://github.com/redhat-scholars/tekton-tutorial-greeter'
      description: The GitHub Repo of the Java Application
      name: github-repo-url
      type: string
    - default: staging
      description: The GitHub revision to use
      name: github-repo-revision
      type: string
    - name: storageDriver
      description: Use storage driver type vfs if you are running on OpenShift.
      type: string
      default: vfs
  tasks:
    - name: clone-sources
      params:
        - name: url
          value: $(params.github-repo-url)
        - name: revision
          value: $(params.github-repo-revision)
        - name: deleteExisting
          value: 'true'
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: source
    - name: redhat-dependency-analytics
      runAfter:
        - clone-sources
      taskRef:
        kind: Task
        name: redhat-dependency-analytics
      params:
        - name: manifest-file-path
          value: pom.xml
        - name: project-directory-path
          value: $(params.context-dir)
        - name: output-file-path
          value: redhat-dependency-analytics-report.json
        - name: image
          value: 'quay.io/ecosystem-appeng/exhort-javascript-api:0.7.0-alpha'
      workspaces:
        - name: output
          workspace: source
    - name: build-java-test
      params:
        - name: GOALS
          value:
            - '-pl'
            - $(params.context-dir)
            - '-B'
            - clean
            - test
      runAfter:
        - redhat-dependency-analytics
      taskRef:
        name: maven
        kind: ClusterTask
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: source
    - name: build-java-app
      params:
        - name: GOALS
          value:
            - '-pl'
            - $(params.context-dir)
            - '-B'
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - build-java-test
      taskRef:
        name: maven
        kind: ClusterTask
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: source
    - name: build-java-app-image
      params:
        - name: CONTEXT
          value: $(params.context-dir)
        - name: IMAGE
          value: $(params.image-name)
        - name: STORAGE_DRIVER
          value: "$(params.storageDriver)"
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - build-java-app
      taskRef:
        name: buildah
        kind: ClusterTask
      workspaces:
        - name: source
          workspace: source
  workspaces:
    - name: source
    - name: maven-settings
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: redhat-dependency-analytics
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/deprecated: "true"
    tekton.dev/categories: Security
    tekton.dev/pipelines.minVersion: "0.37.5"
    tekton.dev/tags: Security, Vulnenrability, CVE
    tekton.dev/displayName: "Red Hat Dependency Analytics"
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    The Red Hat Dependency Analytics task is an interface between Tekton and Red Hat Dependency Analytics (RHDA) platform.
    It provides vulnerability and compliance analysis for application dependencies in your software supply chain.

  workspaces:
    - name: output
      description: Volume backing this workspace is used for input/output of the task.

  params:
    - name: manifest-file-path
      description: Path to target manifest file within the project directory.

    - name: project-directory-path
      description: Path to directory within workspace, where the project is installed.
      default: project-package

    - name: output-file-path
      description: Path to file within workspace, where the analysis report is saved.
      default: redhat-dependency-analytics-report.json

    - name: image
      description: Image where Exhort Javascript API and required dependencies are installed.
      default: quay.io/ecosystem-appeng/exhort-javascript-api:0.7.0-alpha

  steps:
    - name: redhat-dependency-analytics
      image: $(params.image)
      workingDir: $(workspaces.output.path)
      env:
        - name: API_SNYK_DISABLED
          value: "true"
      script: |
        #!/bin/sh

        project_directory="$(params.project-directory-path)"
        manifest_file="$(params.manifest-file-path)"
        output_file="$(params.output-file-path)"

        if [ -n "$project_directory" ]; then
          sh /exhort.sh "$project_directory/$manifest_file" "$output_file"
        else
          sh /exhort.sh "$manifest_file" "$output_file"
        fi
